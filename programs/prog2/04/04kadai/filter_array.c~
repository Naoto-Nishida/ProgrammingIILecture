#include <stdio.h>
#include <stdlib.h>
#include <math.h>
 
#define MAXNUMS 1000
#define FIXEDSEED 3
 
int isSquareNumber(int n);
int isPrimeNumber(int n);
int isPowerOfTwo(int n);
 
int filterIntegers(int n, int inArray[], int outArray[], /* ここにコールバック関数のポインタを指定 */);
 
void printIntegers(int n, int a[]);
 
int main(int argc, char **argv)
{
    int inputIntegers[MAXNUMS];
    int filteredIntegers[MAXNUMS];
    int i, nIntegers, nFiltered;
 
    if (argc != 2)
    {
        fprintf(stderr, "Usage: %s num\n", argv[0]);
        return -1;
    }
 
    nIntegers = atoi(argv[1]);
     
    if (nIntegers < 0 || nIntegers > MAXNUMS)
    {
        fprintf(stderr, "Error: invalid num: %d\n", nIntegers);
        return -2;
    }
 
    srand(FIXEDSEED);
 
    /* 乱数で 1000 以下の自然数を入力 */
    for (i=0; i<nIntegers; i++)
    {
        inputIntegers[i] = 1 + rand() % 1000;
    }
 
    printf("input (%d integers):\n", nIntegers);
    printIntegers(nIntegers, inputIntegers);
    putchar('\n');
 
    nFiltered = filterIntegers(nIntegers, inputIntegers, filteredIntegers, isSquareNumber);
 
    printf("square numbers (%d integers):\n", nFiltered);
    printIntegers(nFiltered, filteredIntegers);
    putchar('\n');
 
    nFiltered = filterIntegers(nIntegers, inputIntegers, filteredIntegers, isPrimeNumber);
 
    printf("prime numbers (%d integers):\n", nFiltered);
    printIntegers(nFiltered, filteredIntegers);
    putchar('\n');
     
    nFiltered = filterIntegers(nIntegers, inputIntegers, filteredIntegers, isPowerOfTwo);
 
    printf("power of two (%d integers):\n", nFiltered);
    printIntegers(nFiltered, filteredIntegers);
 
    return 0;
}
 
int isSquareNumber(int n)
{
    /* n がある自然数の平方数であれば 1、そうでなければ 0 を返す */
}
 
int isPrimeNumber(int n)
{
    /* n が素数なら 1、そうでなければ 0 を返す */
}
 
int isPowerOfTwo(int n)
{
    /* n が 2 のべき乗なら 1、そうでなければ 0 を返す */
}
 
int filterIntegers(int n, int inArray[], int outArray[], /* ここにコールバック関数のポインタを指定 */)
{
    /* 要素数 n の配列 inArray[] を受け取り、
     * コールバック関数で指定した条件を満たす要素を outArray[] に格納し、
     * 最終的に条件を満たした要素数を返り値として返す。
     */
}
 
void printIntegers(int n, int a[])
{
    int i;
    for (i=0; i<n; i++)
    {
        printf("%d", a[i]);
        if (i != (n-1)) putchar(',');
        if ((i+1) % 10 == 0) putchar('\n');
    }
    if (n % 10 != 0) putchar('\n');
}
